name: Check Firefox Packages

on:
  schedule:
    - cron: "0 */6 * * *" # every 6 hours
  workflow_dispatch:

jobs:
  check:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y wget gzip xz-utils zstd tar

      - name: Run Firefox checker
        id: check
        run: |
          mkdir -p firefox/latest
          ARCHS=("aarch64" "arm" "x86_64" "i686")
          REPO_URL="https://packages-cf.termux.dev/apt/termux-x11/dists/x11/main"
          updated=0

          for arch in "${ARCHS[@]}"; do
            echo "Checking for $arch..."

            wget -qO - "$REPO_URL/binary-$arch/Packages.gz" | zgrep -A 10 '^Package: firefox$' > tmp.txt

            version=$(grep '^Version:' tmp.txt | head -n1 | sed 's/Version: //')
            filename=$(grep '^Filename:' tmp.txt | head -n1 | sed 's/Filename: //')

            echo "Found version: $version"
            echo "Filename: $filename"

            verfile="firefox/latest/firefox_version_${arch}.txt"
            archivefile="firefox/latest/firefox_latest_${arch}.tar.xz"

            oldver=$(cat "$verfile" 2>/dev/null || echo "none")

            if [ "$version" != "$oldver" ] || [ ! -f "$archivefile" ]; then
              echo "Updating $arch..."
              
              debfile="firefox_${arch}.deb"
              wget -O "$debfile" "https://packages-cf.termux.dev/apt/termux-x11/$filename"

              # Extract firefox folder from .deb and compress
              workdir="deb_extract_temp"
              rm -rf "$workdir" firefox
              mkdir "$workdir"
              cd "$workdir"

              ar x "../$debfile"

              if [ -f data.tar.xz ]; then
                tar -xf data.tar.xz
              elif [ -f data.tar.zst ]; then
                tar --zstd -xf data.tar.zst
              elif [ -f data.tar.gz ]; then
                tar -xf data.tar.gz
              else
                echo "Error: data.tar.* not found in the .deb"
                exit 1
              fi

              firefox_source="data/data/com.termux/files/usr/lib/firefox"
              if [ -d "$firefox_source" ]; then
                cp -a "$firefox_source" ../firefox
              else
                echo "Error: Firefox folder not found at expected path"
                exit 1
              fi

              cd ..
              tar -cJf "$archivefile" firefox

              # Clean up extracted files and deb
              rm -rf "$workdir" "$debfile" firefox

              echo "$version" > "$verfile"
              updated=1
            else
              echo "$arch is already up to date."
            fi

            rm -f tmp.txt
          done

          echo "updated=$updated" >> $GITHUB_OUTPUT

      - name: Cleanup old files
        if: steps.check.outputs.updated == '1'
        run: |
          echo "Cleaning up any old files not matching current arch list..."
          cd firefox/latest

          ARCHS=("aarch64" "arm" "x86_64" "i686")

          # Clean old .tar.xz
          for f in firefox_latest_*.tar.xz; do
            found=0
            for arch in "${ARCHS[@]}"; do
              if [[ "$f" == "firefox_latest_${arch}.tar.xz" ]]; then
                found=1
                break
              fi
            done
            if [ "$found" -eq 0 ]; then
              echo "Removing old archive: $f"
              rm -f "$f"
            fi
          done

          # Clean old version txt
          for f in firefox_version_*.txt; do
            found=0
            for arch in "${ARCHS[@]}"; do
              if [[ "$f" == "firefox_version_${arch}.txt" ]]; then
                found=1
                break
              fi
            done
            if [ "$found" -eq 0 ]; then
              echo "Removing old version file: $f"
              rm -f "$f"
            fi
          done

      - name: Commit changes
        if: steps.check.outputs.updated == '1'
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

          git add firefox/latest/*
          version=$(cat firefox/latest/firefox_version_aarch64.txt)
          git commit -m "Update Firefox to version $version"
          git push "https://${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git" HEAD:main
