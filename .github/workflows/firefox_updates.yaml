name: Check & Update Firefox DEBs (Termux X11, Apt Method)

on:
  schedule:
    - cron: "0 */6 * * *" # Every 6 hours
  workflow_dispatch:

jobs:
  update-firefox:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Install Tools
        run: sudo apt-get install -y wget gzip

      - name: Set Variables
        id: vars
        run: |
          echo "APT_REPO_URL=https://packages-cf.termux.dev/apt/termux-x11" >> $GITHUB_OUTPUT
          echo "ARCHES=aarch64 arm x86_64 i686" >> $GITHUB_OUTPUT

      - name: Loop Over Architectures
        id: loop
        run: |
          updated_list=""

          for ARCH in ${{ steps.vars.outputs.ARCHES }}; do
            echo "Processing arch: $ARCH"

            # Download Packages.gz
            wget -qO Packages.gz "${{ steps.vars.outputs.APT_REPO_URL }}/dists/x11/main/binary-${ARCH}/Packages.gz" || continue
            zgrep -A 1 '^Package: firefox$' Packages.gz > firefox_versions.txt

            # Extract latest version and filename
            latest_ver=$(awk '/^Package:/ {pkg=$2} /^Version:/ {ver=$2; if (pkg == "firefox") print ver}' firefox_versions.txt | sort -V | tail -n1)
            deb_file=$(zgrep -A 20 "Package: firefox" Packages.gz | grep -E "Filename: .*/firefox_.*_${ARCH}\.deb" | grep "$latest_ver" | head -n1 | awk '{print $2}')
            echo "Latest version for $ARCH: $latest_ver"
            echo "DEB path: $deb_file"

            # Skip if no .deb found
            if [ -z "$deb_file" ]; then
              echo "No .deb found for $ARCH"
              continue
            fi

            version_file="firefox/latest/firefox_version_${ARCH}.txt"
            if [ -f "$version_file" ]; then
              existing_ver=$(cat "$version_file")
            else
              existing_ver="none"
            fi
            echo "Existing version for $ARCH: $existing_ver"

            if [ "$latest_ver" != "$existing_ver" ]; then
              echo "New version detected! Downloading..."
              mkdir -p firefox/latest

              wget -qO "firefox/latest/firefox_latest_${ARCH}.deb" "${{ steps.vars.outputs.APT_REPO_URL }}/$deb_file"

              echo "$latest_ver" > "$version_file"

              git add "firefox/latest/firefox_latest_${ARCH}.deb" "$version_file"

              updated_list="$updated_list $ARCH:$latest_ver"
            else
              echo "No new version for $ARCH"
            fi

            rm -f Packages.gz firefox_versions.txt
          done

          echo "updated_list=$updated_list" >> $GITHUB_OUTPUT

      - name: Commit Changes (if any)
        if: steps.loop.outputs.updated_list != ''
        run: |
          git config --global user.name "GitHub Actions Bot"
          git config --global user.email "actions@github.com"

          msg="Update Firefox"
          for entry in ${{ steps.loop.outputs.updated_list }}; do
            arch=${entry%%:*}
            ver=${entry##*:}
            msg="$msg | $arch: $ver"
          done

          git commit -m "$msg"
          git push
